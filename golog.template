# Template for facts
{%for predicate in dominio.predicates%}
	{{- predicate.name|clearSpace-}}
	({%- for fact in predicate.facts -%}
		{{fact.name|clearSpace}},
	{%- endfor %} 
	{{-predicate.finalFact.name|clearSpace}}).
{% endfor %}

#Template for rules
{% for rule in dominio.rules %}
	{{- rule.name|clearSpace -}}(A,
	{{- rule.comparations.comparation.variable1|clearSpace|upper -}}
	{%- for otherComparation in rule.comparations.otherComparation -%}
		,{{- otherComparation.otherComparation.variable1|clearSpace|upper -}}
	{%- endfor -%}
	):-
	{{-rule.comparations.comparation.variable1|clearSpace|upper-}}{{-rule.comparations.comparation.operator|gologOperator-}}{{-rule.comparations.comparation.variable2|clearSpace-}}
	{%- for otherComparation in rule.comparations.otherComparation -%}
		{{otherComparation.logicalOperator|gologOperator}}{{- otherComparation.otherComparation.variable1|clearSpace|upper }}{{otherComparation.otherComparation.operator|gologOperator}}{{otherComparation.otherComparation.variable2-}}
	{%- endfor -%}
	,A={{rule.conclusion|clearSpace}}.
{% endfor %}

#Template for all
{% for ruleLine in dominio.ruleLines%}
	{% if ruleLine|is_rule%}
		{% set rule=ruleLine.rule %}
		{{- rule.name|clearSpace -}}(A,
		{{- rule.comparations.comparation.variable1|clearSpace|upper -}}
		{%- for otherComparation in rule.comparations.otherComparation -%}
			,{{- otherComparation.otherComparation.variable1|clearSpace|upper -}}
		{%- endfor -%}
		):-
		{{-rule.comparations.comparation.variable1|clearSpace|upper-}}{{-rule.comparations.comparation.operator|gologOperator-}}{{-rule.comparations.comparation.variable2|clearSpace-}}
		{%- for otherComparation in rule.comparations.otherComparation -%}
			{{otherComparation.logicalOperator|gologOperator}}{{- otherComparation.otherComparation.variable1|clearSpace|upper }}{{otherComparation.otherComparation.operator|gologOperator}}{{otherComparation.otherComparation.variable2-}}
		{%- endfor -%}
		,A={{rule.conclusion|clearSpace}}.
	{% elif ruleLine|is_predicate %}
		{% set predicate = ruleLine.predicate %}
		{{- predicate.name|clearSpace-}}
		({%- for fact in predicate.facts -%}
			{{fact.name|clearSpace}},
		{%- endfor %} 
		{{-predicate.finalFact.name|clearSpace}}).
	{% endif %}
{% endfor %}

